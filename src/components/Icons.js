import React from 'react'

const Svg = ({ width, height, viewBox, children }) => {
    return (
        <svg width={width} height={height} viewBox={viewBox} fill="none" xmlns="http://www.w3.org/2000/svg">
            {children}
        </svg>
    )
}

export const UnderLine = ({ lineWidth, lineHeight, viewBox, InfoTitle, fontClass }) => {
    return (
        <div className='info-title' style={{ textAlign: "center" }}>
            <h1 className={fontClass}>{InfoTitle}</h1>
            <Svg width={lineWidth} height={lineHeight} viewBox={viewBox}>
                <path d="M639.998 1.72994C641.22 -1.50429 12.5197 0.574858 5.18769 1.72994C-2.14435 2.88503 -1.30127 5.72697 5.18769 9.1225C11.6766 12.518 619.626 4.96418 619.626 4.96418C619.626 4.96418 638.776 4.96418 639.998 1.72994Z" fill="#FF0000" />
            </Svg>
        </div>
    )
}

export const Button = ({ buttonWidth, buttonHeight, buttonText, viewBox }) => {
    return (
        <div className='button flex justify-center align-center'>
            <Svg width={buttonWidth} height={buttonHeight} viewBox={viewBox}>
                <path d="M28.965 97.6124C-59.2656 35.2924 132.507 6.33039 232.022 7.29094C241.757 5.44668 225.802 4.40928 216.608 4.1211C138.456 2.19999 0 20.5466 0 64.9243C0 128.609 174.422 137.254 214.986 138.695C289.622 141.346 465.667 127.457 445.385 67.5178C425.103 7.5791 257.171 -1.01049 203.628 0.0867675C169.879 0.778373 177.667 3.06449 185.78 4.1211C362.636 -1.93041 440.737 49.1335 440.737 75.3567C440.737 147.687 99.5451 147.465 28.965 97.6124Z" fill="white" />
            </Svg>
            <p className='font-6'>{buttonText}</p>
        </div>
    )
}

export const SmallButton = ({ buttonWidth, buttonHeight, buttonText, viewBox, id, handleClick, fill }) => {
    let pointer;
    pointer = fill !== "white" ? "none" : ""
    return (
        <div aria-label={buttonText} className="answer" style={{ pointerEvents: `${pointer}` }}>
            <div onClick={(e) => { handleClick(e) }} id={`button${id}`} className='button small-btn flex justify-center align-center buttonClick'>
                <Svg viewBox={viewBox}>
                    <path d="M17.6845 123.733C-22.3844 43.9272 60.1765 8.10654 105.37 9.33661C109.791 6.97489 102.546 5.64641 98.3701 5.27739C62.8783 2.81726 0 26.3115 0 83.1405C0 164.694 79.2118 175.764 97.6332 177.61C131.529 181.005 211.477 163.218 202.267 86.4617C193.056 9.70561 116.791 -1.29401 92.4752 0.111112C77.1487 0.996765 80.6856 3.92431 84.3698 5.27739C164.687 -2.47203 194.53 63.5825 194.53 97.1632C194.53 189.787 49.7377 187.573 17.6845 123.733Z" fill={fill} />
                </Svg>
                <p className='font-6'>{buttonText}</p>
            </div>
        </div>
    )
}

export const GameBoard = ({ numberOne, numberTwo }) => {
    return (
        <Svg viewBox="0 0 947 970">
            <path fillRule="evenodd" clipRule="evenodd" d="M226.798 80.4484C223.542 82.7825 217.239 86.3304 218.076 81.8489C219.122 76.247 237.962 3.77202 240.753 2.02142C243.544 0.270819 246.683 -1.47978 249.125 2.02142C251.568 5.52263 273.547 79.0479 270.756 80.4484C267.965 81.8489 262.731 83.2494 261.685 81.8489C260.848 80.7285 249.707 38.9008 244.241 18.127L226.798 80.4484ZM565.013 173.65C510.634 65.5188 622.679 16.9839 684.013 18.6506C690.013 15.4506 680.179 13.6506 674.513 13.1505C626.346 9.81722 541.013 41.6505 541.013 118.651C541.013 229.151 648.513 244.151 673.513 246.651L673.57 246.656C675.923 259.407 678.848 276.102 681.846 294.534C675.778 301.716 669.215 309.756 662.325 318.198C621.362 368.38 568.834 432.731 540.013 415.151C490.013 384.651 467.013 290.151 467.013 241.651L466.896 241.569C459.588 205.687 441.363 211.094 432.267 213.792C429.393 214.644 427.431 215.227 427.013 214.151C420.628 197.734 416.513 187.151 409.513 159.151C404.846 158.317 395.613 157.751 396.013 162.151C396.413 166.551 409.846 204.651 416.513 223.151C408.179 229.817 393.813 250.551 401.013 260.151C409.84 271.921 420.592 283.21 454.026 286.469C462.433 336.688 501.389 401.527 509.013 409.151C532.882 433.02 580.985 450.954 684.31 309.981C691.329 354.901 698.013 406.02 698.013 435.151C698.013 455.997 697.224 478.619 696.504 499.25L696.504 499.253V499.255V499.257V499.258V499.259L696.504 499.264V499.265V499.266L696.504 499.268L696.504 499.273V499.275V499.276V499.278C695.491 528.305 694.616 553.388 696.269 564.039C685.303 595.292 658.383 673.835 648.513 719.151C635.988 776.651 665.513 903.651 665.513 903.651C665.513 903.651 651.513 881.151 617.013 871.151C582.513 861.151 545.513 909.151 595.513 929.651C645.513 950.151 667.917 943.26 665.513 937.651C664.013 934.151 659.513 934.151 659.513 934.151C659.513 934.151 570.013 928.651 586.513 890.651C603.013 852.651 665.513 919.151 671.013 926.651C676.513 934.151 686.513 931.151 684.013 921.651C683.893 921.195 683.699 920.48 683.441 919.525L683.437 919.511C678.305 900.537 647.735 787.522 659.513 735.651C669.417 692.03 694.216 615.096 703.722 586.121C703.925 586.693 704.139 587.263 704.365 587.829C729.62 651.056 738.7 687.149 745.974 716.067C757.932 763.599 765.013 791.748 831.031 889.15C817.723 883.155 796.173 874.348 782.013 871.651C761.013 867.651 729.013 884.651 733.013 914.651C736.213 938.651 758.013 942.651 768.513 941.651C790.884 933.341 835.991 915.686 844.608 908.956L844.866 909.328L853.866 904.828C781.701 800.024 769.431 753.681 754.983 699.107C745.723 664.13 735.567 625.771 708.175 566.475C708.396 565.474 708.513 564.358 708.513 563.151C708.513 562.699 708.578 561.293 708.683 559.021C709.799 534.993 715.416 414.03 695.96 298.508C710.209 300.781 740.522 320.966 758.513 341.151C771.411 355.622 781.307 372.34 789.919 386.891L789.92 386.892C801.89 407.114 811.381 423.151 823.013 423.151C858.929 423.151 886.544 372.543 907.225 334.644L907.228 334.639C910.869 327.967 914.294 321.689 917.513 316.151C957.013 296.151 948.846 272.484 941.013 261.151C935.179 251.151 916.413 236.151 888.013 256.151C859.613 276.151 885.346 305.817 901.513 318.151C901.513 318.151 856.013 411.291 834.013 413.651C833.641 413.69 833.275 413.735 832.912 413.779L832.91 413.78C824.672 414.786 817.996 415.602 781.601 355.264C752.849 307.596 715.491 292.149 694.463 289.909C694.178 288.325 693.888 286.742 693.593 285.16C693.58 285.059 693.562 284.963 693.54 284.874C691.161 272.146 688.461 259.535 685.399 247.179C735.785 246.98 827.032 218.995 815.513 123.151C803.013 19.1505 699.513 4.24669 666.513 6.15055C645.713 7.35056 650.513 11.3172 655.513 13.1505C764.513 2.65054 805.013 92.1505 805.013 137.651C805.013 263.151 608.513 260.151 565.013 173.65ZM814.941 893.355C825.776 898.636 835.387 903.32 841.156 903.959C841.527 904.497 841.899 905.038 842.274 905.58C840.073 906.25 837.524 907.263 835.513 908.151C834.293 908.826 833.039 909.523 831.753 910.238C808.614 923.098 775.58 941.458 762.513 935.651C733.013 922.539 745.013 876.151 770.013 877.151C782.74 877.66 800.004 886.074 814.941 893.355ZM936.513 281.651C936.513 292.144 925.32 309.651 911.513 309.651C897.705 309.651 886.513 292.144 886.513 281.651C886.513 271.157 901.705 256.651 915.513 256.651C929.32 256.651 936.513 271.157 936.513 281.651ZM440.513 225.651C441.349 227.184 442.095 228.266 442.752 229.069C446.885 237.89 450.105 252.755 452.855 277.704C432.255 271.934 403.546 255.622 419.513 236.151C421.394 233.856 422.007 237.67 422.685 241.894C423.338 245.955 424.052 250.396 426.013 250.151C429.213 249.751 434.679 247.317 437.013 246.151L431.013 225.651C430.513 222.984 437.513 220.151 440.513 225.651ZM723.949 116.794C727.102 112.797 725.663 98.6344 724.549 92.0529C727.109 89.5687 732.678 85.856 734.48 90.8792C736.733 97.1582 733.298 119.214 730.932 120.5C728.567 121.787 720.008 121.791 723.949 116.794ZM659.792 91.2707C660.126 97.9373 659.892 112.171 656.292 115.771C651.792 120.271 660.292 121.271 662.792 120.271C665.292 119.271 671.292 97.7707 669.792 91.2707C668.592 86.0707 662.626 89.104 659.792 91.2707ZM702.792 163.271C688.626 162.271 655.508 165.818 662.292 181.271C671.292 201.771 708.292 193.771 707.292 188.771C706.917 186.893 701.98 186.496 696.032 186.018C686.14 185.222 673.449 184.202 674.292 175.771C674.788 170.809 683.901 170.032 691.919 169.349C700.061 168.655 707.075 168.057 702.792 163.271ZM18.166 116.887H441.911V110.887L8.41147 109.07C2.01859 109.488 -0.450877 112.046 0.0666547 114.178L13.4677 519.794C13.6399 519.868 13.8104 519.94 13.9791 520.01C14.419 523.615 17.0229 527.203 22.3246 527.887L580.411 453.387V441.543L31.1999 511.392L18.166 116.887ZM173.604 528.305L185.237 529.312L151.879 914.871L140.245 913.865L173.604 528.305ZM368.259 504.887L356.911 507.643L448.247 883.71L459.595 880.954L368.259 504.887Z" fill="white" />
            <text x="130" y="345" class="svg-text">{numberOne} x {numberTwo}</text>
        </Svg>
    )
}

export const Correct = ({ width, height, viewbox }) => {
    return (
        <Svg width={width} height={height} viewBox={viewbox}>
            <path d="M2.25977 18.9267C5.61273 21.6994 8.87383 24.543 11.6068 27.9592C12.8074 29.46 12.3118 30.0385 13.4941 27.1952C17.3552 17.9103 20.5776 8.62604 28.9526 2.3448" stroke="white" stroke-width="3" stroke-linecap="round" />
        </Svg>
    )
}

export const False = ({ width, height, viewbox }) => {
    return (
        <Svg width={width} height={height} viewBox={viewbox}>
            <path d="M0 1.21545C0.589109 0.405148 1.33416 0 2.23515 0C2.58168 0 2.92822 0.0880763 3.27475 0.264228C4.00248 4.9851 5.52723 9.31843 7.84901 13.2642C9.37376 10.3753 11.2104 6.30623 13.3589 1.05691C14.1906 0.598916 14.849 0.369919 15.3342 0.369919C15.854 0.369919 16.2698 0.422764 16.5817 0.528456C15.8886 2.81843 15.0743 4.94986 14.1386 6.92276C13.203 8.89566 12.3193 10.71 11.4876 12.3659C10.6559 14.0217 10.0495 15.2371 9.66832 16.0122C10.6386 17.2453 11.453 18.2317 12.1114 18.9715C12.8045 19.6762 13.7574 20.416 14.9703 21.1911C16.5644 22.248 18.0718 22.7764 19.4926 22.7764C20.2203 22.7764 20.7228 22.9173 21 23.1992C20.6188 24.397 19.7005 24.9959 18.2451 24.9959C15.8193 24.9959 13.3936 24.0271 10.9678 22.0894C10.0668 21.3496 9.5297 20.9092 9.35644 20.7683C9.21782 20.5921 8.75 20.1165 7.95297 19.3415C7.67574 19.7642 7.27723 20.5041 6.75743 21.561C6.27228 22.6179 5.85644 23.4634 5.5099 24.0976C5.16337 24.6965 4.69554 25.1721 4.10644 25.5244C3.51733 25.8415 2.99752 26 2.54703 26C2.13119 26 1.73267 25.9472 1.35149 25.8415C1.90594 24.6789 2.7203 23.0935 3.79455 21.0854C4.90347 19.0772 5.64851 17.7033 6.0297 16.9634C4.29703 14.2154 2.91089 11.6612 1.87129 9.30081C0.866337 6.90515 0.242574 4.21003 0 1.21545Z" fill="white" />
        </Svg>
    )
}

